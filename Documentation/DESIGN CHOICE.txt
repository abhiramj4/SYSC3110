DESIGN CHOICE
-------------

We structured our project based on a SYSC 2004 Assignment that one of our members had done where he made a text-based (eventually GUI) Chess game. Certain aspects and project structure were taken from there such as the Coordinate/Square/Board classes, and a few method concepts. We originally used an Observer/Observable pattern but we realized it would be more efficient if we were to create our own listener interface that zombies and plants implement. Zombies and plants both extend Entity and they each have their own children which are the different types of plants/zombies. We figured this would be the most efficient way to implement the entities since instantiating a Sunflower for example can simply be done with new Sunflower() with no extra parameters needed. GameListener has one method right now called Update which is what updates all the entities at different times with different arguments allowing us to have the entities interact and do what they're supposed to do. We have two uses of enumerations where we needed to define certain types. Even though we only have one level right now, we decided to pass information about each level in the form of a JSON object. When we have dozens of levels to make, this would be very easy and efficient. The rest of our code is in the Game class which handles the running of the game, the menu, the displaying of the board, etc. For now, we think that this is the best way to design this game, however we do want to continue trying to make our code more efficient and consider more test scenarios to perfect our project. Once we start implementing the GUI, certain aspects of our project structure/design will change anyways. Enjoy the game, and good luck!